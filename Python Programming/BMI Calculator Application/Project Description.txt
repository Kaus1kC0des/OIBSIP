This project aims to provide users with their BMI (Body Mass Index) and much more insights on their health.

Framework:

1) Flask Application (Broswer based application)
2) Web app provides more insight into user's BMI through Graphs and other data visualisation modes

Project Structure:
/BMI Calculator Application
    /static
        /css
        /js
        /images
    /templates
        login.html
        register.html
        bmi.html
        data_visualization.html
        ...
    /services
         __init__.py
        bmi_calculator.py
        data_visualization.py
        create_user.py
        login.py
        write_to_db.py

    app.py


Functionalities Listing:
1) Calculate BMI
2) Data Visualisation
3) User Login and Authentication


Databases:
1) Login Database
2) BMI Database

Login Database:
    Table login:
        userid VARCHAR PK
        password VARCHAR

    Table BMI:
        userid INT PK
        bmi DECIMAL
        prev_bmi DECIMAL

    TABLE user:
        name VARCHAR
        age INT
        email VARCHAR
        userid INT PK



The login_user function in the login.py file is expected to return a boolean value indicating whether the login was successful. Make sure this function is implemented correctly.
In the register route, you're generating a userid using the generate_userid function and passing it to the create_user function. Make sure the generate_userid function is implemented correctly and generates unique user IDs.
In the bmi route, you're hardcoding the userid as 'user1' when writing the BMI to the database. In a real application, you would typically get the userid of the currently logged-in user.
In the data_visualization route, you're calling the plot_bmi_data function, which is expected to return a Plotly figure. Make sure this function is implemented correctly.
You're using SQLite as your database and hardcoding the database path as 'database/master.db'. Make sure this path is correct and the database file exists.